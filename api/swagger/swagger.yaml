swagger: "2.0"
info:
  version: "0.0.1"
  title: mWallet API
host: localhost:5000
basePath: /

schemes:
  - http
  - https
  
consumes:
  - application/json
produces:
  - application/json
  
securityDefinitions:
  keySecurity:
    type: apiKey
    in: header
    name: Authorization
security:
  - keySecurity: []
  
paths:
  /:
    x-swagger-router-controller: status
    get:
      description: Verify whether the API is active and is accepting requests
      operationId: getStatus
      security: []
      responses:
        "200":
          description: The API is currently active
        "503":
          description: The API is temporarily unavailable
  
  /signup:
    x-swagger-router-controller: auth
    post:
      description: Register a user to the API
      operationId: signup
      security: []
      parameters:
        - in: 'body'
          name: 'credentials'
          required: true
          schema:
            $ref: "#/definitions/Credentials"
      responses:
        "200":
          description: Successful registration
          
        "400":
          description: An error occurred during registration
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            email_exists:
              message: This e-mail address is already registered to another account
            
  /login:
    x-swagger-router-controller: auth
    post:
      description: Login to the API
      operationId: login
      security: []
      parameters:
        - in: 'body'
          name: 'credentials'
          required: true
          schema:
            type: object
            required:
              - emailAddress
              - password
            properties:
              emailAddress:
                type: string
                description: Email address
              password:
                type: string
                description: Password
      responses:
        "200":
          description: Successful login
          schema:
            description: Access Token (JWT)
            type: string
        "401":
          description: Login failed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            invalid_credentials:
              message: Invalid Credentials
  
  
  
  /swagger:
    x-swagger-pipe: swagger_raw
    
  /creditcards:
    x-swagger-router-controller: creditcard
    get:
      description: Get a list of added creditcards
      operationId: listCards
      responses:
        "200":
          description: Credit cards added by the user
          schema:
            type: array
            items:
              $ref: "#/definitions/CreditCard"
    post:
      description: Add a new credit card
      operationId: storeCard
      parameters:
        - in: 'body'
          name: cardinfo
          required: true
          schema:
            $ref: "#/definitions/CreditCard"
      responses:
        "200":
          description: Credit card saved
        "400":
          description: Error occurred while saving credit card
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Update a credit card
      operationId: updateCard
      parameters:
        - in: 'body'
          name: cardinfo
          required: true
          schema:
            $ref: "#/definitions/CreditCard"
        - in: 'query'
          name: cardid
          required: true
          type: number
      responses:
        "200":
          description: Card updated successfully
        "400":
          description: An error occurred
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: User tried to update a card that does not belong to them
        "404":
          description: Card not found
    delete:
      description: Delete a credit card
      operationId: removeCard
      parameters:
        - in: 'query'
          name: cardid
          required: true
          type: number
      responses:
        "200":
          description: Card deleted successfully
        "403":
          description: User tried to delete a card that does not belong to them
        "404":
          description: Card not found
          
  /pay:
    x-swagger-router-controller: payment
    post:
      operationId: genericPayment
      description: Start a payment
      parameters:
        - in: 'body'
          name: paymentDetails
          required: true
          schema:
            $ref: '#/definitions/Payment'
      responses:
        "200":
          description: Payment accepted
        "400":
          description: Payment rejected
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /vignette:
    x-swagger-router-controller: payment
    post:
      operationId: vignettePurchase
      description: Buy a vignette online
      parameters:
        - in: 'body'
          name: order
          required: true
          schema:
            $ref: '#/definitions/Vignette'
      responses:
        "200":
          description: Payment completed successfully
        "400":
          description: Payment rejected
          schema:
            $ref: "#/definitions/ErrorResponse"
    
  /payments:
    x-swagger-router-controller: payment
    get:
      operationId: listPayments
      description: Get a list of payments
      parameters:
        - in: 'query'
          name: cardId
          required: false
          type: number
      responses:
        "200":
          description: List of payments
          schema:
            type: array
            items:
              $ref: '#/definitions/Payment'
  
  /vendors:
    x-swagger-router-controller: vendor
    get:
      security: []
      operationId: listVendors
      description: Get a list of vendors
      responses:
        "200":
          description: List of vendors
          schema:
            type: array
            items:
              $ref: "#/definitions/Vendor"
    
definitions:
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
        
  Credentials:
    required: 
       - emailAddress
       - password
       - name
       - addressInfo
    properties:
      emailAddress:
        type: string
        description: E-mail address of the user
      password:
        type: string
        description: The password used to authenticate
      name:
        type: string
        description: The name of the user
      addressInfo:
        type: string
        description: User address information
  
  CreditCard:
    required:
      - cardNumber
      - nameOfBank
      - nameOnCard
      - expiry
      - payPass
      - dailyLimit
      - ccv
      - default
    properties:
      cardNumber:
        type: string
        description: Credit card number
      nameOfBank:
        type: string
        description: The name of the bank issuing the credit card
      nameOnCard:
        type: string
        default: The name displayed on the card
      expiry:
        type: string
        description: MM/YY format of expiry
      payPass:
        type: boolean
        description: Determine whether you can pay with this card via PayPass or not
      dailyLimit:
        type: number
        description: The daily limit of the card in Euros
      monthlyLimit:
        type: number
        description: The monthly limit of the card in Euros (0 means no monthly limit)
      ccv:
        type: string
        description: CCV authentication number
      default:
        type: boolean
        description: Determines whether this is the default card or not
  
  Payment:
    required:
      - amount
      - vendorId
      - referenceNumber
    properties:
      amount:
        type: number
        description: Payment amount in Euros
      cardId:
        type: number
        description: 
          The credit card to process the payment with.
          Only requried if card is different when the default
      date:
        type: string
        description: Date and time of the payment
      remarks:
        type: string
        description: Additional information about the payment
      vendorId:
        type: number
        description: Vendor ID. See /vendors for list.
      referenceNumber:
        type: string
        description: Reference number for the payment.
        
  Vignette: 
    required:
      - plateNumber
      - vehicleCategory
      - vignetteType
    properties:
      plateNumber:
        type: string
        description: License plate number of the vehicle
      vehicleCategory:
        type: string
        enum: [ D1, D2, B2, D1m, U ]
      vignetteType:
        type: string
        enum: [ weekly, monthly ]
        
  Vendor:
    required:
      - id
      - name
    properties:
      id:
        type: number
        description: ID of vendor
      name:
        type: string
        description: Name of vendor
